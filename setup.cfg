##########################
# Setup.py Configuration #
##########################
[metadata]
name = metacogitor
version = 1.0.0-dev
description = MetaCogitor provides a simple library to create role based agents for use in generative AI
long_description = file: README.md
long_description_content_type = text/markdown

# URLs associated with the project
url = ""
download_url = ""
project_urls =
    Bug Tracker = ""
    Source Code = ""

# Author information
author = Joshua Magady
author_email = josh.magady@gmail.com
maintainer = Joshua Magady
maintainer_email = josh.magady@gmail.com

# License Information
license = Proprietary
license_files =
    LICENSE

# Search tags
classifiers =
    Development Status :: 1 - Planning
    Environment :: Console
    Intended Audience :: Developers
    Operating System :: OS Independent
    Framework :: Pytest
    Framework :: tox
    Framework :: Sphinx
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3 :: Only
# TODO add your topics from the Trove controlled vocabulary (see https://pypi.org/classifiers)
keywords =
    MetaCogitor
# TODO add your own free-text keywords

[options]
# Random options
install_requires = file: requirements/base.txt
zip_safe = False
include_package_data = True
python_requires = >=3.10

# Where is my code
packages = find:
package_dir =
    =src

[options.package_data]
MetaCogitor.locale = src/MetaCogitor/locale
MetaCogitor.static = src/MetaCogitor/static

[options.extras_require]
dev = file: requirements/dev.txt
prod = file: requirements/prod.txt


[options.packages.find]
where = src

[options.entry_points]
console_scripts =
    metacogitor = metacogitor.cli:main

[flake8]
max-line-length = 120
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,venv,.venv

[pycodestyle]
max-line-length = 120
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,venv,.venv

[coverage:run]
include = app/**
omit = *migrations*, *tests*
plugins =
    django_coverage_plugin
